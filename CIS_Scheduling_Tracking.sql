-- create and select the database
DROP DATABASE IF EXISTS CIS_Scheduling_Tracking;
CREATE DATABASE CIS_Scheduling_Tracking;
USE CIS_Scheduling_Tracking;

-- create the tables for the DATABASE
CREATE TABLE TEAM_MEMBERS (
	MEM_ID			INT(5)			NOT NULL  AUTO_INCREMENT,
	MEM_FNAME		VARCHAR(50)		NOT NULL,
	MEM_LNAME		VARCHAR(50)		NOT NULL,
	MEM_EMAIL		VARCHAR(100)	NOT NULL,
	MEM_PASSWORD	VARCHAR(100)	NOT NULL,
	PRIMARY KEY (MEM_ID)
);

CREATE TABLE PROJECT_DIRECTOR (
	DIR_ID			INT(5)			NOT NULL  AUTO_INCREMENT,
	DIR_RANK		VARCHAR(5)		NULL,
	DIR_FNAME		VARCHAR(50)		NOT NULL,
	DIR_LNAME		VARCHAR(50)		NOT NULL,
	DIR_EMAIL		VARCHAR(100)	NOT NULL,
	DIR_PASSWORD	VARCHAR(100)	NOT NULL,
	PRIMARY KEY (DIR_ID)
);

CREATE TABLE ACCOUNTING (
	ACC_ID		INT(5)			NOT NULL  AUTO_INCREMENT,
	ACC_FNAME	VARCHAR(50)		NOT NULL,
	ACC_LNAME	VARCHAR(50)		NOT NULL,
	PRIMARY KEY (ACC_ID)
);

CREATE TABLE TASKS (
	TASK_ID			INT(5)			NOT NULL  AUTO_INCREMENT,
	TASK_NAME		VARCHAR(150)	NOT NULL,
	TASK_CATEGORY	VARCHAR(150)	NOT NULL,
	PRIMARY KEY (TASK_ID)
);

CREATE TABLE PROJECT (
	PRO_ID		INT(5)			NOT NULL  AUTO_INCREMENT,
	DIR_ID		INT(5)			NOT NULL,
	ACC_ID		INT(5)			NOT NULL,
	PRO_NAME	VARCHAR(250)	NOT NULL,
	PER_COST	VARCHAR(20),
	PRIMARY KEY (PRO_ID),
	FOREIGN KEY (DIR_ID) REFERENCES PROJECT_DIRECTOR(DIR_ID),
	FOREIGN KEY (ACC_ID) REFERENCES ACCOUNTING(ACC_ID)
);

CREATE TABLE TEAM (
	TEAM_ID		INT(5)			NOT NULL  AUTO_INCREMENT,
	PRO_ID		INT(5)			NOT NULL,
	PRIMARY KEY (TEAM_ID),
	FOREIGN KEY (PRO_ID) REFERENCES PROJECT(PRO_ID)
);

CREATE TABLE TEAM_LIST (
	MEM_ID		INT(5)				NOT NULL,
	TEAM_ID		INT(5)				NOT NULL,
	IS_LEAD		TINYINT(1)			NOT NULL,
	PRIMARY KEY (MEM_ID, TEAM_ID),
	FOREIGN KEY (MEM_ID) REFERENCES TEAM_MEMBERS(MEM_ID),
	FOREIGN KEY (TEAM_ID) REFERENCES TEAM(TEAM_ID)
);

CREATE TABLE TASK_LIST (
	TASK_LIST_ID	INT(5)			NOT NULL  AUTO_INCREMENT,
	TASK_ID			INT(5)			NOT NULL,
	PRO_ID			INT(5)			NOT NULL,
	TASK_NAME		VARCHAR(250)	NOT NULL,
	PRIMARY KEY (TASK_LIST_ID),
	FOREIGN KEY (TASK_ID) REFERENCES TASKS(TASK_ID),
	FOREIGN KEY (PRO_ID) REFERENCES PROJECT(PRO_ID)
);

-- inserting data into the TABLESPACE
INSERT INTO PROJECT_DIRECTOR (DIR_ID,DIR_RANK, DIR_FNAME, DIR_LNAME, DIR_EMAIL, DIR_PASSWORD) VALUES
(1, "DR.","Pratibha", "Menon", "menon@calu.edu", "admin");

-- Create a user named mgs_user
